# -*- coding: utf-8 -*-

import matplotlib.pyplot as plt
import numpy as np

def moving_average(x, w):
    return np.convolve(x, np.ones(w), 'valid') / w

# 128 units
test_results = [0.0, 0.0, 0.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 40.0, 20.0, 20.0, 0.0, 20.0, 0.0, 0.0, 40.0, 0.0, 20.0, 20.0, 20.0, 20.0, 0.0, 20.0, 40.0, 40.0, 0.0, 40.0, 80.0, 40.0, 60.0, 40.0, 20.0, 20.0, 20.0, 0.0, 20.0, 0.0, 40.0, 20.0, 40.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 20.0, 0.0, 20.0, 20.0, 40.0, 0.0, 60.0, 20.0, 20.0, 40.0, 40.0, 20.0, 20.0, 0.0, 40.0, 20.0, 20.0, 60.0, 20.0, 20.0, 20.0, 0.0, 20.0, 40.0, 40.0, 20.0, 0.0, 40.0, 40.0, 20.0, 20.0, 60.0, 40.0, 40.0, 20.0, 40.0, 40.0, 20.0, 60.0, 20.0, 20.0, 20.0, 40.0, 20.0, 0.0, 20.0, 20.0, 20.0, 0.0, 20.0, 20.0, 40.0, 20.0, 20.0, 40.0, 40.0, 0.0, 40.0, 0.0, 0.0, 0.0, 0.0, 20.0, 40.0, 20.0, 20.0, 40.0, 40.0, 20.0, 0.0, 40.0, 20.0, 20.0, 60.0, 60.0, 0.0, 20.0, 0.0, 20.0, 60.0, 40.0, 60.0, 20.0, 40.0, 20.0, 60.0, 40.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 60.0, 20.0, 20.0, 40.0, 40.0, 60.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 60.0, 0.0, 20.0, 40.0, 0.0, 60.0, 20.0, 60.0, 0.0, 40.0, 40.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 20.0, 60.0, 40.0, 40.0, 40.0, 40.0, 60.0, 40.0, 0.0, 20.0, 60.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 60.0, 60.0, 60.0, 20.0, 60.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 60.0, 20.0, 40.0, 20.0, 40.0, 0.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 40.0, 60.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 20.0, 0.0, 0.0, 60.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 60.0, 20.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 40.0, 0.0]
test_results_2 = [0.0, 0.0, 20.0, 40.0, 0.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 40.0, 60.0, 40.0, 60.0, 40.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0, 40.0, 60.0, 20.0, 20.0, 20.0, 40.0, 40.0, 60.0, 60.0, 20.0, 20.0, 60.0, 60.0, 40.0, 40.0, 40.0, 20.0, 60.0, 40.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 20.0, 60.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 40.0, 20.0, 60.0, 40.0, 40.0, 60.0, 60.0, 40.0, 40.0, 60.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 40.0, 60.0, 40.0, 60.0, 40.0, 60.0, 20.0, 60.0, 60.0, 40.0, 60.0, 40.0, 40.0, 0.0, 40.0, 60.0, 20.0, 40.0, 40.0, 20.0, 40.0, 40.0, 20.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 20.0, 0.0, 40.0, 40.0, 60.0, 60.0, 20.0, 40.0, 20.0, 40.0, 0.0, 0.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 40.0, 40.0, 20.0, 20.0, 40.0, 60.0, 40.0, 0.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 40.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 40.0, 40.0, 40.0, 60.0, 20.0, 40.0, 60.0, 20.0, 40.0, 40.0, 40.0, 60.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 0.0, 40.0, 40.0, 80.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 20.0, 40.0, 40.0, 20.0, 0.0, 40.0, 60.0, 20.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 60.0, 40.0, 20.0, 20.0, 40.0, 60.0, 40.0, 40.0, 60.0]
test_results_3 = [0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 40.0, 0.0, 40.0, 40.0, 0.0, 40.0, 0.0, 40.0, 40.0, 60.0, 40.0, 60.0, 20.0, 20.0, 20.0, 20.0, 60.0, 20.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 20.0, 20.0, 0.0, 40.0, 20.0, 60.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 20.0, 20.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 20.0, 0.0, 20.0, 20.0, 20.0, 40.0, 20.0, 0.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 60.0, 40.0, 20.0, 60.0, 60.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 60.0, 60.0, 40.0, 60.0, 60.0, 20.0, 40.0, 20.0, 40.0, 20.0, 20.0, 60.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 40.0, 80.0, 20.0, 40.0, 20.0, 0.0, 60.0, 60.0, 20.0, 60.0, 40.0, 20.0, 60.0, 40.0, 40.0, 40.0, 40.0, 60.0, 40.0, 20.0, 0.0, 40.0, 40.0, 40.0, 20.0, 40.0, 60.0, 20.0, 80.0, 60.0, 60.0, 40.0, 20.0, 40.0, 20.0, 60.0, 60.0, 40.0, 20.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0, 0.0, 0.0, 40.0, 0.0, 20.0, 40.0, 40.0, 0.0, 0.0, 20.0, 40.0, 40.0, 40.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 40.0, 0.0, 20.0, 20.0, 40.0, 60.0, 40.0, 40.0, 20.0, 0.0, 0.0, 0.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 60.0, 20.0, 60.0, 40.0, 40.0, 60.0, 20.0, 40.0, 20.0, 20.0, 0.0, 20.0, 40.0, 40.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 20.0]

test_results_all = (np.array(test_results) + np.array(test_results_2) + np.array(test_results_3)) / 3

# 512 units
test_results_512_1 = [20.0, 20.0, 10.0, 10.0, 10.0, 20.0, 10.0, 30.0, 50.0, 30.0, 40.0, 40.0, 30.0, 20.0, 40.0, 30.0, 60.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 30.0, 40.0, 40.0, 70.0, 30.0, 30.0, 40.0, 40.0, 30.0, 60.0, 30.0, 60.0, 50.0, 80.0, 40.0, 50.0, 50.0, 30.0, 30.0, 50.0, 30.0, 40.0, 30.0, 20.0, 30.0, 20.0, 50.0, 40.0, 20.0, 30.0, 30.0, 30.0, 20.0, 30.0, 20.0, 40.0, 30.0, 40.0, 30.0, 20.0, 0.0, 20.0, 30.0, 40.0, 0.0, 30.0, 0.0, 20.0, 30.0, 20.0, 50.0, 40.0, 40.0, 40.0, 30.0, 50.0, 30.0, 20.0, 30.0, 50.0, 40.0, 40.0, 40.0, 20.0, 20.0, 30.0, 20.0, 40.0, 30.0, 20.0, 50.0, 20.0, 30.0, 40.0, 20.0, 40.0, 30.0, 40.0, 0.0, 0.0, 30.0, 20.0, 30.0, 40.0, 30.0, 20.0, 10.0, 50.0, 20.0, 10.0, 30.0, 30.0, 10.0, 30.0, 30.0, 20.0, 30.0, 40.0, 30.0, 0.0, 10.0, 10.0, 0.0, 20.0, 20.0, 50.0, 20.0, 10.0, 30.0, 10.0, 30.0, 10.0, 20.0, 30.0, 20.0, 10.0, 30.0, 40.0, 40.0, 20.0, 30.0, 40.0, 20.0, 30.0, 10.0, 40.0, 20.0, 40.0, 20.0, 20.0, 40.0, 20.0, 20.0, 30.0, 40.0, 20.0, 40.0, 20.0, 30.0, 30.0, 0.0, 40.0, 40.0, 40.0, 40.0, 10.0, 30.0, 20.0, 10.0, 10.0, 50.0, 0.0, 30.0, 20.0, 40.0, 10.0, 20.0, 50.0, 10.0, 40.0, 40.0, 10.0, 30.0, 30.0, 10.0, 20.0, 10.0, 10.0, 10.0, 30.0, 30.0, 20.0, 20.0, 40.0, 10.0, 20.0, 30.0, 20.0, 10.0, 10.0, 30.0, 10.0, 40.0, 40.0, 30.0, 30.0, 40.0, 20.0, 30.0, 30.0, 20.0, 20.0, 30.0, 10.0, 30.0, 30.0, 40.0, 10.0, 30.0, 30.0, 20.0, 20.0, 50.0, 20.0, 30.0, 60.0, 30.0, 10.0, 40.0, 50.0, 50.0, 30.0, 50.0, 20.0, 40.0, 30.0, 30.0, 50.0, 30.0, 30.0, 40.0, 20.0, 20.0, 30.0, 20.0, 10.0, 30.0, 30.0, 20.0, 30.0, 30.0, 20.0, 40.0, 30.0, 10.0, 40.0, 40.0, 10.0, 30.0, 20.0, 20.0, 20.0, 10.0, 10.0, 10.0, 20.0, 30.0, 40.0, 20.0, 10.0, 20.0, 30.0, 10.0, 50.0, 50.0, 20.0, 30.0, 40.0, 50.0, 10.0, 30.0, 30.0, 40.0, 20.0, 20.0, 10.0, 20.0, 50.0, 30.0, 20.0, 30.0, 40.0, 30.0, 30.0, 30.0]
test_results_512_2 = [40.0, 20.0, 0.0, 0.0, 0.0, 40.0, 0.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 60.0, 20.0, 40.0, 20.0, 40.0, 0.0, 20.0, 20.0, 60.0, 40.0, 40.0, 40.0, 80.0, 20.0, 40.0, 20.0, 40.0, 20.0, 60.0, 40.0, 80.0, 60.0, 80.0, 40.0, 60.0, 40.0, 20.0, 20.0, 40.0, 20.0, 40.0, 0.0, 20.0, 20.0, 20.0, 60.0, 40.0, 0.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 40.0, 40.0, 40.0, 20.0, 20.0, 0.0, 0.0, 40.0, 40.0, 0.0, 40.0, 0.0, 20.0, 60.0, 0.0, 40.0, 40.0, 20.0, 40.0, 20.0, 40.0, 20.0, 0.0, 20.0, 40.0, 40.0, 40.0, 20.0, 0.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 40.0, 0.0, 20.0, 40.0, 20.0, 40.0, 20.0, 40.0, 0.0, 0.0, 40.0, 20.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 40.0, 20.0, 0.0, 40.0, 20.0, 40.0, 40.0, 60.0, 20.0, 0.0, 0.0, 0.0, 0.0, 20.0, 20.0, 60.0, 20.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 40.0, 20.0, 0.0, 40.0, 60.0, 40.0, 40.0, 60.0, 60.0, 20.0, 40.0, 20.0, 20.0, 40.0, 60.0, 20.0, 20.0, 60.0, 40.0, 40.0, 20.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 0.0, 60.0, 40.0, 40.0, 40.0, 20.0, 40.0, 20.0, 0.0, 0.0, 60.0, 0.0, 40.0, 20.0, 60.0, 20.0, 40.0, 80.0, 20.0, 60.0, 40.0, 0.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 0.0, 60.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 40.0, 0.0, 40.0, 60.0, 60.0, 60.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 40.0, 20.0, 40.0, 20.0, 40.0, 0.0, 40.0, 20.0, 20.0, 20.0, 60.0, 20.0, 20.0, 60.0, 40.0, 20.0, 40.0, 40.0, 60.0, 40.0, 80.0, 20.0, 60.0, 40.0, 40.0, 40.0, 60.0, 40.0, 60.0, 40.0, 40.0, 20.0, 40.0, 20.0, 60.0, 40.0, 40.0, 40.0, 40.0, 20.0, 60.0, 60.0, 20.0, 40.0, 60.0, 0.0, 40.0, 20.0, 40.0, 20.0, 0.0, 20.0, 0.0, 40.0, 60.0, 40.0, 20.0, 20.0, 40.0, 40.0, 20.0, 40.0, 60.0, 20.0, 60.0, 60.0, 80.0, 20.0, 40.0, 40.0, 60.0, 40.0, 20.0, 20.0, 20.0, 80.0, 40.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0]

# Plans of equal length (r=10)
test_results_eq_length_1 = [0.0, 0.0, 40.0, 40.0, 40.0, 20.0, 0.0, 20.0, 40.0, 20.0, 40.0, 0.0, 20.0, 20.0, 0.0, 20.0, 0.0, 0.0, 40.0, 0.0, 0.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 0.0, 40.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 40.0, 40.0, 0.0, 40.0, 40.0, 20.0, 0.0, 40.0, 0.0, 20.0, 20.0, 20.0, 40.0, 40.0, 20.0, 20.0, 0.0, 40.0, 20.0, 40.0, 40.0, 20.0, 20.0, 0.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 20.0, 20.0, 40.0, 20.0, 20.0, 40.0, 0.0, 20.0, 0.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 20.0, 60.0, 20.0, 20.0, 0.0, 20.0, 40.0, 40.0, 0.0, 20.0, 0.0, 20.0, 0.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 0.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 0.0, 20.0, 20.0, 20.0, 40.0, 0.0, 20.0, 20.0, 0.0, 0.0, 0.0, 0.0, 40.0, 40.0, 20.0, 0.0, 0.0, 40.0, 0.0, 20.0, 20.0, 0.0, 0.0, 60.0, 20.0, 0.0, 0.0, 20.0, 40.0, 20.0, 20.0, 60.0, 20.0, 40.0, 20.0, 60.0, 40.0, 20.0, 0.0, 20.0, 0.0, 20.0, 0.0, 20.0, 20.0, 20.0, 0.0, 20.0, 20.0, 40.0, 20.0, 20.0, 40.0, 20.0, 20.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 20.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 40.0, 40.0, 0.0, 0.0, 20.0, 20.0, 0.0, 0.0, 0.0, 0.0, 20.0, 20.0, 40.0, 0.0, 40.0, 20.0, 40.0, 0.0, 0.0, 40.0, 20.0, 40.0, 20.0, 20.0, 20.0, 0.0, 0.0, 0.0, 20.0, 20.0, 40.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 20.0, 20.0, 0.0, 0.0, 0.0, 0.0, 20.0, 60.0, 0.0, 0.0, 0.0, 20.0, 0.0, 40.0, 20.0, 0.0, 0.0, 20.0, 20.0, 40.0, 20.0, 20.0, 40.0, 20.0, 0.0, 20.0, 40.0, 20.0, 20.0, 20.0, 0.0, 20.0, 0.0, 40.0, 20.0, 20.0, 20.0, 0.0, 40.0, 0.0, 0.0, 60.0, 20.0, 40.0, 20.0, 60.0, 20.0, 0.0, 40.0, 0.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 40.0, 20.0, 20.0, 40.0, 60.0, 40.0, 40.0]
test_results_eq_length_2 = [0.0, 20.0, 0.0, 20.0, 20.0, 0.0, 0.0, 20.0, 20.0, 0.0, 0.0, 20.0, 0.0, 0.0, 20.0, 0.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 0.0, 0.0, 0.0, 40.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 20.0, 20.0, 0.0, 0.0, 40.0, 0.0, 20.0, 60.0, 20.0, 0.0, 0.0, 20.0, 20.0, 0.0, 20.0, 20.0, 20.0, 0.0, 40.0, 40.0, 20.0, 20.0, 20.0, 0.0, 20.0, 20.0, 0.0, 0.0, 20.0, 20.0, 20.0, 20.0, 0.0, 20.0, 0.0, 40.0, 0.0, 20.0, 20.0, 40.0, 0.0, 0.0, 40.0, 20.0, 20.0, 20.0, 40.0, 0.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 20.0, 20.0, 0.0, 20.0, 40.0, 0.0, 40.0, 20.0, 20.0, 20.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 20.0, 40.0, 0.0, 20.0, 40.0, 0.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 0.0, 20.0, 20.0, 0.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 20.0, 20.0, 0.0, 40.0, 0.0, 20.0, 40.0, 20.0, 20.0, 40.0, 0.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 20.0, 20.0, 0.0, 40.0, 0.0, 0.0, 0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 20.0, 0.0, 20.0, 0.0, 20.0, 0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 20.0, 0.0, 0.0, 20.0, 20.0, 0.0, 20.0, 20.0, 0.0, 0.0, 40.0, 20.0, 20.0, 20.0, 20.0, 0.0, 20.0, 0.0, 40.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 0.0, 20.0, 40.0, 20.0, 40.0, 20.0, 0.0, 0.0, 0.0, 20.0, 20.0, 0.0, 40.0, 20.0, 0.0, 20.0, 40.0, 20.0, 40.0, 0.0, 20.0, 40.0, 0.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 0.0, 0.0, 20.0, 40.0, 0.0, 40.0, 0.0, 20.0, 20.0, 20.0, 20.0, 0.0, 20.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0]
test_results_eq_length_3 = [20.0, 40.0, 20.0, 0.0, 0.0, 20.0, 40.0, 20.0, 40.0, 60.0, 20.0, 40.0, 40.0, 20.0, 20.0, 0.0, 40.0, 0.0, 20.0, 0.0, 0.0, 40.0, 40.0, 40.0, 40.0, 0.0, 0.0, 0.0, 40.0, 0.0, 40.0, 0.0, 20.0, 40.0, 40.0, 0.0, 20.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 40.0, 0.0, 20.0, 40.0, 40.0, 20.0, 60.0, 20.0, 0.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 0.0, 20.0, 0.0, 40.0, 40.0, 60.0, 40.0, 40.0, 0.0, 20.0, 0.0, 20.0, 20.0, 0.0, 0.0, 20.0, 20.0, 0.0, 40.0, 0.0, 0.0, 0.0, 0.0, 20.0, 20.0, 20.0, 20.0, 0.0, 40.0, 20.0, 20.0, 0.0, 0.0, 20.0, 0.0, 0.0, 40.0, 0.0, 20.0, 40.0, 20.0, 0.0, 40.0, 40.0, 40.0, 20.0, 0.0, 60.0, 20.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 0.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 40.0, 20.0, 0.0, 0.0, 40.0, 20.0, 0.0, 20.0, 20.0, 0.0, 0.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 20.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 0.0, 20.0, 0.0, 40.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 20.0, 20.0, 0.0, 0.0, 20.0, 40.0, 20.0, 0.0, 20.0, 20.0, 20.0, 20.0, 40.0, 0.0, 20.0, 40.0, 20.0, 40.0, 0.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 20.0, 0.0, 40.0, 20.0, 0.0, 20.0, 0.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 0.0, 0.0, 0.0, 0.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 0.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 60.0, 40.0, 20.0, 40.0, 40.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 20.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 60.0, 0.0, 40.0, 40.0, 20.0, 40.0, 0.0, 0.0, 0.0, 0.0, 20.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 60.0, 20.0, 40.0, 20.0, 40.0, 20.0, 20.0, 0.0, 40.0, 20.0, 20.0, 0.0, 0.0, 0.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0]

# Discrete rewards
test_results_discrete_1 = [0.0, 0.0, 20.0, 0.0, 20.0, 0.0, 60.0, 20.0, 20.0, 20.0, 0.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 20.0, 40.0, 0.0, 0.0, 20.0, 40.0, 60.0, 40.0, 20.0, 0.0, 40.0, 20.0, 20.0, 0.0, 0.0, 40.0, 0.0, 40.0, 20.0, 20.0, 20.0, 60.0, 60.0, 20.0, 0.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 60.0, 60.0, 20.0, 60.0, 20.0, 20.0, 60.0, 60.0, 60.0, 60.0, 80.0, 40.0, 60.0, 60.0, 40.0, 20.0, 80.0, 20.0, 20.0, 40.0, 40.0, 20.0, 60.0, 40.0, 60.0, 40.0, 0.0, 40.0, 40.0, 20.0, 0.0, 40.0, 20.0, 40.0, 20.0, 0.0, 20.0, 20.0, 0.0, 40.0, 40.0, 0.0, 40.0, 20.0, 20.0, 20.0, 60.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 60.0, 40.0, 60.0, 0.0, 20.0, 40.0, 40.0, 60.0, 20.0, 0.0, 40.0, 0.0, 20.0, 60.0, 20.0, 20.0, 0.0, 20.0, 0.0, 40.0, 20.0, 20.0, 60.0, 0.0, 0.0, 20.0, 40.0, 20.0, 20.0, 0.0, 40.0, 20.0, 60.0, 0.0, 40.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 20.0, 40.0, 60.0, 20.0, 40.0, 0.0, 40.0, 40.0, 20.0, 20.0, 60.0, 40.0, 20.0, 40.0, 20.0, 40.0, 20.0, 40.0, 60.0, 20.0, 20.0, 40.0, 40.0, 60.0, 40.0, 60.0, 40.0, 40.0, 40.0, 60.0, 20.0, 40.0, 40.0, 60.0, 20.0, 20.0, 40.0, 60.0, 0.0, 40.0, 60.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 60.0, 20.0, 20.0, 20.0, 0.0, 20.0, 20.0, 20.0, 0.0, 40.0, 0.0, 20.0, 20.0, 60.0, 0.0, 20.0, 0.0, 40.0, 20.0, 40.0, 60.0, 40.0, 60.0, 40.0, 20.0, 0.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 20.0, 40.0, 40.0, 20.0, 0.0, 0.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 20.0, 20.0, 40.0, 40.0, 60.0, 20.0, 20.0, 0.0, 0.0, 40.0, 20.0, 20.0, 40.0, 20.0, 0.0, 20.0, 60.0, 20.0, 40.0, 20.0, 20.0, 20.0, 60.0, 20.0, 40.0, 20.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.0, 0.0, 40.0, 40.0, 40.0, 20.0, 60.0, 60.0, 60.0, 40.0, 20.0, 40.0, 0.0, 20.0, 60.0, 20.0, 40.0, 0.0]
test_results_discrete_2 = [0.0, 0.0, 20.0, 0.0, 0.0, 20.0, 0.0, 0.0, 20.0, 0.0, 40.0, 20.0, 20.0, 40.0, 0.0, 20.0, 20.0, 20.0, 60.0, 40.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 20.0, 60.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 20.0, 60.0, 80.0, 40.0, 40.0, 40.0, 40.0, 60.0, 40.0, 20.0, 80.0, 60.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 60.0, 40.0, 60.0, 40.0, 60.0, 40.0, 40.0, 40.0, 60.0, 60.0, 40.0, 40.0, 40.0, 60.0, 60.0, 40.0, 40.0, 60.0, 40.0, 20.0, 40.0, 40.0, 60.0, 20.0, 60.0, 20.0, 40.0, 20.0, 60.0, 40.0, 40.0, 40.0, 40.0, 60.0, 40.0, 40.0, 60.0, 60.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 40.0, 40.0, 0.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 0.0, 40.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 40.0, 20.0, 0.0, 40.0, 20.0, 0.0, 20.0, 20.0, 0.0, 20.0, 20.0, 40.0, 60.0, 20.0, 20.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 40.0, 0.0, 20.0, 60.0, 20.0, 40.0, 40.0, 60.0, 20.0, 40.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 60.0, 20.0, 20.0, 40.0, 20.0, 40.0, 40.0, 60.0, 20.0, 20.0, 40.0, 60.0, 20.0, 40.0, 0.0, 20.0, 40.0, 40.0, 40.0, 20.0, 20.0, 0.0, 20.0, 20.0, 20.0, 60.0, 40.0, 20.0, 20.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 60.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 60.0, 20.0, 20.0, 60.0, 40.0, 20.0, 40.0, 0.0, 40.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 0.0, 20.0, 0.0, 40.0, 20.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 40.0, 20.0, 40.0, 20.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 20.0, 40.0, 20.0, 20.0, 40.0, 40.0, 0.0, 0.0, 40.0, 40.0, 20.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 40.0, 40.0, 20.0, 40.0, 40.0, 20.0, 20.0, 0.0, 20.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 0.0, 20.0, 0.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 20.0, 20.0, 40.0, 20.0, 0.0, 20.0, 0.0, 40.0, 20.0, 20.0, 0.0]
test_results_discrete_3 = [40.0, 0.0, 0.0, 0.0, 20.0, 60.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 20.0, 20.0, 20.0, 0.0, 40.0, 40.0, 20.0, 40.0, 40.0, 20.0, 40.0, 40.0, 60.0, 60.0, 20.0, 40.0, 40.0, 20.0, 40.0, 60.0, 0.0, 0.0, 0.0, 20.0, 20.0, 0.0, 40.0, 20.0, 60.0, 20.0, 0.0, 40.0, 40.0, 60.0, 40.0, 60.0, 40.0, 40.0, 20.0, 60.0, 40.0, 0.0, 40.0, 20.0, 60.0, 60.0, 20.0, 40.0, 40.0, 0.0, 60.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 40.0, 20.0, 40.0, 60.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 60.0, 60.0, 20.0, 20.0, 0.0, 40.0, 60.0, 40.0, 20.0, 40.0, 40.0, 20.0, 20.0, 40.0, 60.0, 20.0, 60.0, 40.0, 40.0, 20.0, 20.0, 60.0, 80.0, 40.0, 40.0, 40.0, 60.0, 60.0, 60.0, 60.0, 20.0, 40.0, 20.0, 40.0, 60.0, 20.0, 0.0, 20.0, 20.0, 20.0, 60.0, 20.0, 40.0, 40.0, 0.0, 40.0, 60.0, 20.0, 40.0, 20.0, 40.0, 40.0, 80.0, 40.0, 60.0, 60.0, 0.0, 40.0, 40.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 40.0, 40.0, 40.0, 60.0, 60.0, 40.0, 40.0, 40.0, 80.0, 60.0, 20.0, 20.0, 0.0, 0.0, 60.0, 40.0, 40.0, 60.0, 20.0, 60.0, 20.0, 0.0, 0.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 40.0, 0.0, 40.0, 40.0, 20.0, 60.0, 40.0, 40.0, 40.0, 60.0, 0.0, 20.0, 40.0, 0.0, 40.0, 20.0, 0.0, 40.0, 20.0, 80.0, 20.0, 60.0, 40.0, 20.0, 40.0, 40.0, 20.0, 40.0, 60.0, 40.0, 20.0, 60.0, 40.0, 20.0, 20.0, 40.0, 40.0, 60.0, 20.0, 60.0, 60.0, 40.0, 40.0, 20.0, 80.0, 60.0, 40.0, 80.0, 40.0, 60.0, 60.0, 60.0, 0.0, 20.0, 60.0, 60.0, 40.0, 60.0, 40.0, 60.0, 40.0, 20.0, 60.0, 20.0, 60.0, 60.0, 40.0, 40.0, 40.0, 60.0, 40.0, 40.0, 20.0, 40.0, 60.0, 40.0, 20.0, 40.0, 20.0, 60.0, 0.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 20.0, 40.0, 20.0, 40.0, 20.0, 40.0, 40.0, 40.0, 20.0, 40.0, 20.0, 60.0, 40.0, 0.0, 20.0, 20.0, 60.0, 20.0, 40.0, 40.0, 40.0, 20.0, 40.0, 40.0, 0.0, 20.0, 40.0, 60.0, 60.0, 40.0, 60.0, 0.0, 20.0, 20.0]

# Discrete rewards all test levels
# Easy test levels
test_results_discrete_easy_4 = [0.0, 0.0, 20.0, 20.0, 60.0, 40.0, 0.0, 20.0, 0.0, 20.0, 20.0, 40.0, 20.0, 40.0, 0.0, 40.0, 20.0, 0.0, 40.0, 20.0, 60.0, 20.0, 20.0, 20.0, 0.0, 20.0, 20.0, 0.0, 0.0, 20.0, 20.0, 0.0, 0.0, 20.0, 40.0, 20.0, 20.0, 20.0, 0.0, 0.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 20.0, 0.0, 0.0, 20.0, 0.0, 40.0, 20.0, 20.0, 40.0, 40.0, 20.0, 0.0, 40.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 40.0, 20.0, 40.0, 20.0, 0.0, 40.0, 60.0, 20.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 20.0, 40.0, 20.0, 20.0, 0.0, 20.0, 20.0, 20.0, 20.0, 60.0, 20.0, 40.0, 20.0, 20.0, 40.0, 20.0, 0.0, 20.0, 20.0, 20.0, 0.0, 20.0, 20.0, 20.0, 40.0, 0.0, 40.0, 0.0, 40.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 20.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 20.0, 0.0, 0.0, 20.0, 40.0, 20.0, 20.0, 0.0, 0.0, 0.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 60.0, 60.0, 20.0, 20.0, 20.0, 0.0, 60.0, 20.0, 20.0, 60.0, 40.0, 60.0, 60.0, 60.0, 0.0, 60.0, 20.0, 0.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 20.0, 0.0, 40.0, 0.0, 20.0, 40.0, 0.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 80.0, 20.0, 0.0, 60.0, 60.0, 20.0, 40.0, 60.0, 40.0, 0.0, 20.0]
test_results_discrete_easy_5 = [0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 20.0, 40.0, 20.0, 0.0, 0.0, 0.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 20.0, 20.0, 0.0, 20.0, 40.0, 40.0, 40.0, 0.0, 40.0, 20.0, 20.0, 20.0, 20.0, 0.0, 60.0, 20.0, 40.0, 0.0, 40.0, 0.0, 20.0, 60.0, 20.0, 0.0, 40.0, 0.0, 40.0, 0.0, 20.0, 0.0, 20.0, 20.0, 40.0, 0.0, 40.0, 0.0, 40.0, 20.0, 20.0, 0.0, 0.0, 0.0, 40.0, 20.0, 0.0, 0.0, 0.0, 20.0, 60.0, 40.0, 40.0, 20.0, 0.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 0.0, 20.0, 60.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 20.0, 20.0, 0.0, 60.0, 0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 20.0, 40.0, 20.0, 0.0, 20.0, 0.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 20.0, 20.0, 0.0, 60.0, 0.0, 0.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 20.0, 40.0, 0.0, 0.0, 40.0, 20.0, 0.0, 40.0, 0.0, 0.0, 20.0, 0.0, 40.0, 0.0, 40.0, 0.0, 40.0, 20.0, 40.0, 40.0, 0.0, 0.0, 20.0, 40.0, 0.0, 0.0, 40.0, 0.0, 0.0, 40.0, 40.0, 40.0, 20.0, 20.0, 0.0, 40.0, 20.0, 20.0, 0.0, 40.0, 0.0, 20.0, 40.0, 20.0, 60.0, 20.0, 40.0]
test_results_discrete_easy_6 = [20.0, 40.0, 0.0, 20.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 40.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 0.0, 40.0, 20.0, 0.0, 40.0, 0.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 0.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 0.0, 20.0, 60.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 80.0, 20.0, 0.0, 40.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 0.0, 20.0, 20.0, 20.0, 40.0, 40.0, 20.0, 20.0, 0.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 80.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 0.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 20.0, 0.0, 20.0, 0.0, 0.0, 20.0, 20.0, 0.0, 20.0, 0.0, 0.0, 20.0, 0.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 60.0, 20.0, 0.0, 20.0, 20.0, 0.0, 0.0, 40.0, 20.0, 20.0, 40.0, 0.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 40.0, 40.0, 40.0, 40.0, 0.0, 0.0, 0.0, 20.0, 0.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 60.0, 0.0, 40.0, 20.0, 40.0, 0.0, 20.0, 20.0, 0.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 0.0, 20.0, 40.0, 40.0, 0.0, 0.0, 20.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 20.0, 20.0, 0.0, 20.0, 20.0, 20.0, 0.0, 20.0, 20.0, 40.0, 20.0, 0.0]
# Hard test levels
test_results_discrete_hard_4 = [0.0, 16.67, 0.0, 0.0, 0.0, 16.67, 0.0, 16.67, 0.0, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 0.0, 16.67, 16.67, 0.0, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 0.0, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 33.33, 16.67, 16.67, 50.0, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 33.33, 16.67, 33.33, 16.67, 33.33, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 33.33, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 33.33, 33.33, 33.33, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 33.33, 33.33]
test_results_discrete_hard_5 = [33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 33.33, 16.67, 16.67, 16.67, 33.33, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 50.0, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 33.33, 33.33, 33.33, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 33.33, 33.33, 16.67, 33.33, 33.33, 33.33, 33.33, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 0.0, 16.67, 16.67, 16.67, 33.33, 33.33, 33.33, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 33.33, 16.67, 16.67, 16.67, 16.67, 33.33, 33.33, 16.67, 16.67, 33.33, 16.67, 33.33, 33.33, 16.67, 33.33, 16.67, 33.33, 16.67, 16.67, 16.67, 33.33, 16.67]
test_results_discrete_hard_6 = [0.0, 16.67, 16.67, 16.67, 16.67, 0.0, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 0.0, 16.67, 16.67, 16.67, 16.67, 16.67, 0.0, 16.67, 33.33, 0.0, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 0.0, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 33.33, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 50.0, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 50.0, 33.33, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 33.33, 33.33, 16.67, 16.67, 50.0, 0.0, 50.0, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 33.33, 33.33, 16.67, 16.67, 0.0, 0.0, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 50.0, 50.0, 16.67, 16.67, 50.0, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 33.33, 16.67, 0.0, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 50.0, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 33.33, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 16.67, 33.33, 16.67, 33.33, 16.67, 33.33, 16.67, 16.67, 50.0, 16.67, 33.33, 16.67, 16.67, 33.33, 33.33, 33.33, 16.67, 16.67, 0.0, 16.67, 33.33, 33.33, 0.0, 16.67, 16.67, 50.0, 16.67, 16.67, 16.67, 16.67, 16.67, 0.0, 33.33, 16.67, 16.67, 16.67, 16.67, 33.33, 16.67, 16.67, 33.33, 16.67, 16.67, 33.33, 33.33, 16.67]

# ---------- BoulderDash ---------
test_results_bd_5e06 = [0.29, -0.88, -0.38, -0.7, 0.34, 2.14, 1.21, 2.0, -0.51, 1.95, -0.51, -0.69, -0.83, 0.09, 1.49, 1.35, -0.69, -0.73, -0.7, -0.48, -0.63, 1.3, -0.68, 1.79, -0.5, -0.66, 1.41, -0.07, 1.88, 0.44, -0.55, -0.8, -0.5, 0.27, -0.77, 0.18, -0.48, -0.63, 0.14, -0.61, -0.53, -0.79, 0.51, 1.16, -0.49, -0.82, 2.62, 0.11, 1.18, 0.19]
test_results_bd_1e05 = [-0.5, 1.95, -0.88, 1.41, 1.49, -0.63, 2.62, -0.8, -0.69, -0.51, -0.73, 0.29, -0.7, 1.3, -0.51, 0.09, -0.66, 2.0, -0.69, -0.48, -0.82, 0.44, 0.51, -0.49, -0.07, -0.79, -0.83, -0.53, 1.35, 1.88, 0.19, 1.18, -0.7, -0.63, -0.48, 0.14, 1.16, 0.27, 1.79, -0.68, -0.61, -0.77, -0.38, 0.18, -0.55, 0.11, 0.34, 2.14, 1.21, -0.5]
test_results_bd_2e05 = [-0.7, 0.51, 0.19, -0.53, -0.51, 0.29, -0.07, -0.73, -0.55, 1.79, -0.38, 1.35, 1.16, 0.27, -0.63, -0.63, 1.3, 1.21, -0.7, -0.88, -0.69, -0.51, 1.95, -0.61, 2.62, -0.77, -0.66, -0.79, 0.14, -0.8, 1.49, 0.44, 2.14, 0.18, -0.49, -0.5, -0.69, -0.48, 0.11, 2.0, 1.41, -0.5, -0.82, -0.68, -0.48, -0.83, 0.09, 1.18, 0.34, 1.88]
test_results_bd_5e05 = [-0.5, 1.49, -0.8, 0.18, 1.79, -0.82, 1.35, -0.7, -0.48, -0.79, 1.88, 0.09, -0.5, 0.44, -0.63, 1.3, 1.16, -0.49, 2.14, -0.88, -0.63, 0.51, -0.83, 0.11, -0.48, -0.51, 1.95, 2.0, 1.18, -0.68, 0.19, -0.53, -0.66, -0.73, -0.38, -0.07, -0.55, 2.62, -0.7, -0.51, 1.41, -0.69, 1.21, 0.27, 0.14, 0.34, 0.29, -0.77, -0.69, -0.61]

# 200 levels, 1 rep per train it, alfa=5e-05
test_results_bd_5e06_1rep = [-0.20422198, -0.14699491, -0.67105196, -0.83866617,  0.14398191, -0.26746632,  0.24797667,  0.21938459, -0.22582254, -0.04011256, -0.23654053,  0.181207  ,  0.15539771,  0.14073779,  0.22142368, 0.154585  , -0.03707954,  0.03954883,  0.43843236,  0.72528098]
test_results_bd_5e06_1rep_only_easy_lvs = [ 1.47546557, -0.03460983, -0.5190457 , -0.77395638,  0.60118128, -0.37286528,  0.01158249,  0.20878661, -0.65454631, -0.35906274, -0.68815623,  0.35073206,  0.39752578, -0.02678509, -0.45443618, -0.06775028, -0.07997824, -0.24975058,  0.80353551,  0.43213353]

# < Moving Average >


i = 1

# 128 units
test_results_avg = moving_average(test_results, i)
test_results_avg_2 = moving_average(test_results_2, i)
test_results_avg_3 = moving_average(test_results_3, i)

test_results_all_avg = moving_average(test_results_all, i)

# 512 units
test_results_avg_512_1 = moving_average(test_results_512_1, i)
test_results_avg_512_2 = moving_average(test_results_512_2, i)

# Plans of equal length (r=10)
test_results_eq_length_avg_1 = moving_average(test_results_eq_length_1, i)
test_results_eq_length_avg_2 = moving_average(test_results_eq_length_2, i)
test_results_eq_length_avg_3 = moving_average(test_results_eq_length_3, i)

# Discrete rewards
test_results_discrete_avg_1 = moving_average(test_results_discrete_1, i)
test_results_discrete_avg_2 = moving_average(test_results_discrete_2, i)
test_results_discrete_avg_3 = moving_average(test_results_discrete_3, i)

# Discrete rewards all test levels
# Easy test levels
test_results_discrete_easy_avg_4 = moving_average(test_results_discrete_easy_4, i)
test_results_discrete_easy_avg_5 = moving_average(test_results_discrete_easy_5, i)
test_results_discrete_easy_avg_6 = moving_average(test_results_discrete_easy_6, i)
# Hard test levels
test_results_discrete_hard_avg_4 = moving_average(test_results_discrete_hard_4, i)
test_results_discrete_hard_avg_5 = moving_average(test_results_discrete_hard_5, i)
test_results_discrete_hard_avg_6 = moving_average(test_results_discrete_hard_6, i)

# ----- BoulderDash ------

test_results_bd_5e06_avg = moving_average(test_results_bd_5e06, i)
test_results_bd_1e05_avg = moving_average(test_results_bd_1e05, i)
test_results_bd_2e05_avg = moving_average(test_results_bd_2e05, i)
test_results_bd_5e05_avg = moving_average(test_results_bd_5e05, i)

# 200 levels, 1 rep per train it, alfa=5e-05
test_results_bd_5e06_1rep_avg = moving_average(test_results_bd_5e06_1rep, i)
test_results_bd_5e06_1rep_avg_only_easy_lvs = moving_average(test_results_bd_5e06_1rep_only_easy_lvs, i)

# < Plots >


# 128 units
"""
plt.ylim((5,50))
x = list(range(20, len(test_results)-19)) # Adjust X axis (moving average erases elements)
plt.plot(x, test_results_avg)
plt.plot(x, test_results_avg_2)
plt.plot(x, test_results_avg_3)
plt.title("128 units")
plt.show()
# MEAN SUCCESS RATE BETWEEN 16M-24M ITERATIONS OF THE THREE EXECUTIONS: 34.0"""

# 512 units
"""plt.ylim((5,50))
plt.plot(test_results_avg_512_1)
plt.plot(test_results_avg_512_2)
plt.title("512 units")
plt.show()"""

# Plans of equal length (r=10) 
"""plt.ylim((5,50))
plt.plot(test_results_eq_length_avg_1)
plt.plot(test_results_eq_length_avg_2)
plt.plot(test_results_eq_length_avg_3)
plt.title("Plans of equal length")
plt.show()"""

"""
# Discrete rewards
plt.ylim((5,50))
x = list(range(20, len(test_results_discrete_1)-19)) # Adjust X axis (moving average erases elements)
plt.plot(x, test_results_discrete_avg_1)
plt.plot(x, test_results_discrete_avg_2)
plt.plot(x, test_results_discrete_avg_3)
plt.title("Discrete rewards")
plt.show()
# MEAN SUCCESS RATE BETWEEN 5M-7.5M ITERATIONS OF THE THREE EXECUTIONS: 42.13

# Discrete rewards all test levels
# Easy test levels
plt.ylim((5,50))
x = list(range(20, len(test_results_discrete_easy_4)-19)) # Adjust X axis (moving average erases elements)
plt.plot(x, test_results_discrete_easy_avg_4)
plt.plot(x, test_results_discrete_easy_avg_5)
plt.plot(x, test_results_discrete_easy_avg_6)
plt.title("Discrete rewards - Easy levels")
plt.show()
# Hard test levels
plt.ylim((5,50))
x = list(range(20, len(test_results_discrete_hard_4)-19)) # Adjust X axis (moving average erases elements)
plt.plot(x, test_results_discrete_hard_avg_4)
plt.plot(x, test_results_discrete_hard_avg_5)
plt.plot(x, test_results_discrete_hard_avg_6)
plt.title("Discrete rewards - Hard levels")
plt.show()"""

# --------- BoulderDash -----------
"""
# x = list(range(20, len(test_results_discrete_1)-19)) # Adjust X axis (moving average erases elements)
plt.plot(test_results_bd_5e06_avg)
plt.title("BoulderDash - lr 5e-06")
plt.show()

# x = list(range(20, len(test_results_discrete_1)-19)) # Adjust X axis (moving average erases elements)
plt.plot(test_results_bd_1e05_avg)
plt.title("BoulderDash - lr 1e-05")
plt.show()

# x = list(range(20, len(test_results_discrete_1)-19)) # Adjust X axis (moving average erases elements)
plt.plot(test_results_bd_2e05_avg)
plt.title("BoulderDash - lr 2e-05")
plt.show()

# x = list(range(20, len(test_results_discrete_1)-19)) # Adjust X axis (moving average erases elements)
plt.plot(test_results_bd_5e05_avg)
plt.title("BoulderDash - lr 5e-05")
plt.show()
"""

# 200 levels, 1 rep per train it, alfa=5e-05
x = list(range(5,101,5))
plt.plot(x, test_results_bd_5e06_1rep_avg)
plt.title("BoulderDash - 200 lvs, lr=5e-06, 1 rep per train it")
plt.show()

x = list(range(5,101,5))
plt.plot(x, test_results_bd_5e06_1rep_avg_only_easy_lvs)
plt.title("BoulderDash - 200 lvs, lr=5e-06, 1 rep per train it, only results on easy levels")
plt.show()