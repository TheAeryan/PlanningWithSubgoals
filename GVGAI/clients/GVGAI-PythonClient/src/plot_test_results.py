# -*- coding: utf-8 -*-

import matplotlib.pyplot as plt
import numpy as np

def moving_average(x, w):
    return np.convolve(x, np.ones(w), 'valid') / w

test_results = [0.0, 0.0, 0.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 40.0, 20.0, 20.0, 0.0, 20.0, 0.0, 0.0, 40.0, 0.0, 20.0, 20.0, 20.0, 20.0, 0.0, 20.0, 40.0, 40.0, 0.0, 40.0, 80.0, 40.0, 60.0, 40.0, 20.0, 20.0, 20.0, 0.0, 20.0, 0.0, 40.0, 20.0, 40.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.0, 0.0, 0.0, 20.0, 0.0, 20.0, 20.0, 40.0, 0.0, 60.0, 20.0, 20.0, 40.0, 40.0, 20.0, 20.0, 0.0, 40.0, 20.0, 20.0, 60.0, 20.0, 20.0, 20.0, 0.0, 20.0, 40.0, 40.0, 20.0, 0.0, 40.0, 40.0, 20.0, 20.0, 60.0, 40.0, 40.0, 20.0, 40.0, 40.0, 20.0, 60.0, 20.0, 20.0, 20.0, 40.0, 20.0, 0.0, 20.0, 20.0, 20.0, 0.0, 20.0, 20.0, 40.0, 20.0, 20.0, 40.0, 40.0, 0.0, 40.0, 0.0, 0.0, 0.0, 0.0, 20.0, 40.0, 20.0, 20.0, 40.0, 40.0, 20.0, 0.0, 40.0, 20.0, 20.0, 60.0, 60.0, 0.0, 20.0, 0.0, 20.0, 60.0, 40.0, 60.0, 20.0, 40.0, 20.0, 60.0, 40.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 60.0, 20.0, 20.0, 40.0, 40.0, 60.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 60.0, 0.0, 20.0, 40.0, 0.0, 60.0, 20.0, 60.0, 0.0, 40.0, 40.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 20.0, 60.0, 40.0, 40.0, 40.0, 40.0, 60.0, 40.0, 0.0, 20.0, 60.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 60.0, 60.0, 60.0, 20.0, 60.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 60.0, 20.0, 40.0, 20.0, 40.0, 0.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 40.0, 60.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 20.0, 0.0, 0.0, 60.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 60.0, 20.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 40.0, 0.0]
test_results_2 = [0.0, 0.0, 20.0, 40.0, 0.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 40.0, 60.0, 40.0, 60.0, 40.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0, 40.0, 60.0, 20.0, 20.0, 20.0, 40.0, 40.0, 60.0, 60.0, 20.0, 20.0, 60.0, 60.0, 40.0, 40.0, 40.0, 20.0, 60.0, 40.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 20.0, 60.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 40.0, 20.0, 60.0, 40.0, 40.0, 60.0, 60.0, 40.0, 40.0, 60.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 40.0, 60.0, 40.0, 60.0, 40.0, 60.0, 20.0, 60.0, 60.0, 40.0, 60.0, 40.0, 40.0, 0.0, 40.0, 60.0, 20.0, 40.0, 40.0, 20.0, 40.0, 40.0, 20.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 20.0, 0.0, 40.0, 40.0, 60.0, 60.0, 20.0, 40.0, 20.0, 40.0, 0.0, 0.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 40.0, 40.0, 20.0, 20.0, 40.0, 60.0, 40.0, 0.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 40.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 40.0, 40.0, 40.0, 60.0, 20.0, 40.0, 60.0, 20.0, 40.0, 40.0, 40.0, 60.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 40.0, 0.0, 40.0, 40.0, 80.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 20.0, 40.0, 40.0, 20.0, 0.0, 40.0, 60.0, 20.0, 40.0, 40.0, 20.0, 20.0, 20.0, 20.0, 40.0, 20.0, 40.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 60.0, 40.0, 20.0, 20.0, 40.0, 60.0, 40.0, 40.0, 60.0]
test_results_3 = [0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 20.0, 40.0, 20.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 40.0, 0.0, 40.0, 40.0, 0.0, 40.0, 0.0, 40.0, 40.0, 60.0, 40.0, 60.0, 20.0, 20.0, 20.0, 20.0, 60.0, 20.0, 40.0, 40.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 20.0, 20.0, 0.0, 40.0, 20.0, 60.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 20.0, 20.0, 20.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 20.0, 20.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 20.0, 0.0, 20.0, 20.0, 20.0, 40.0, 20.0, 0.0, 40.0, 40.0, 40.0, 20.0, 20.0, 20.0, 40.0, 60.0, 40.0, 20.0, 60.0, 60.0, 20.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 60.0, 60.0, 40.0, 60.0, 60.0, 20.0, 40.0, 20.0, 40.0, 20.0, 20.0, 60.0, 20.0, 20.0, 20.0, 40.0, 20.0, 20.0, 20.0, 40.0, 80.0, 20.0, 40.0, 20.0, 0.0, 60.0, 60.0, 20.0, 60.0, 40.0, 20.0, 60.0, 40.0, 40.0, 40.0, 40.0, 60.0, 40.0, 20.0, 0.0, 40.0, 40.0, 40.0, 20.0, 40.0, 60.0, 20.0, 80.0, 60.0, 60.0, 40.0, 20.0, 40.0, 20.0, 60.0, 60.0, 40.0, 20.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0, 0.0, 0.0, 40.0, 0.0, 20.0, 40.0, 40.0, 0.0, 0.0, 20.0, 40.0, 40.0, 40.0, 20.0, 40.0, 20.0, 20.0, 20.0, 20.0, 20.0, 0.0, 40.0, 0.0, 20.0, 20.0, 40.0, 60.0, 40.0, 40.0, 20.0, 0.0, 0.0, 0.0, 20.0, 20.0, 0.0, 20.0, 0.0, 20.0, 60.0, 20.0, 60.0, 40.0, 40.0, 60.0, 20.0, 40.0, 20.0, 20.0, 0.0, 20.0, 40.0, 40.0, 40.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 20.0]

test_results_all = (np.array(test_results) + np.array(test_results_2) + np.array(test_results_3)) / 3

i = 20
test_results_avg = moving_average(test_results, i)
test_results_avg_2 = moving_average(test_results_2, i)
test_results_avg_3 = moving_average(test_results_3, i)

test_results_all_avg = moving_average(test_results_all, i)

#plt.plot(test_results_all_avg)


plt.plot(test_results_avg)
plt.plot(test_results_avg_2)
plt.plot(test_results_avg_3)